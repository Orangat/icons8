{
  "name": "icons8-vue",
  "version": "1.0.0",
  "description": "Icons8 Vue example",
  "dependencies": {
    "@nuxtjs/pwa": "^2.0.5",
    "atob": "^2.0.3",
    "axios": "^0.17.0",
    "babel-cli": "^6.26.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-es2015": "^6.24.0",
    "cookie-parser": "^1.4.3",
    "cross-env": "^5.1.0",
    "css-loader": "^0.28.7",
    "debounce": "^1.1.0",
    "es6-promise": "^4.1.1",
    "express": "^4.16.2",
    "extract-text-webpack-plugin": "^3.0.2",
    "file-saver": "^1.3.3",
    "fs-extra": "^5.0.0",
    "highlight.js": "^9.12.0",
    "jszip": "^3.1.4",
    "konva": "^2.1.3",
    "lru-cache": "^4.1.1",
    "moment": "^2.19.1",
    "morgan": "^1.9.0",
    "node-sass": "^4.5.3",
    "normalize.css": "^7.0.0",
    "nuxt": "^1.4.0",
    "opentype.js": "^0.7.3",
    "paper": "^0.11.5",
    "particles.js": "^2.0.0",
    "postcss-cssnext": "^3.0.2",
    "pug": "^2.0.0-rc.4",
    "redis": "^2.8.0",
    "style-loader": "^0.19.0",
    "svg-inline-loader": "^0.8.0",
    "vue": "^2.5.16",
    "vue-clipboard2": "^0.1.0",
    "vue-color": "^2.4.4",
    "vue-infinite-scroll": "^2.0.2",
    "vue-lazyload": "^1.1.4",
    "vue-scrollto": "^2.11.0",
    "vue-spinner": "^1.0.3",
    "vue2-touch-events": "^1.0.0",
    "vuetify": "^1.0.18"
  },
  "scripts": {
    "pull": "git checkout master && git pull && npm install",
    "pull-dev": "git checkout dev && git pull && npm install",
    "dev": "npm run init-cache && nodemon server.js",
    "init-cache": "babel-node initCache.js --presets es2015",
    "build-dist": "npm run init-cache && nuxt build --config-file ./apps/icon/nuxt.config.js",
    "build": "cross-env NODE_ENV=production npm run build-dist",
    "build-demo": "cross-env NODE_ENV=demo npm run build-dist",
    "build-pre": "cross-env NODE_ENV=pre npm run build-dist",
    "deploy": "npm run pull && npm run build && pm2 restart fast",
    "deploy-demo": "npm run pull-dev && npm run build-demo && pm2 restart fast",
    "deploy-pre": "npm run pull && npm run build-pre && pm2 restart fast",
    "start": "cross-env HOST=127.0.0.1 PORT=3033 NODE_ENV=production node server.js",
    "start-demo": "cross-env HOST=127.0.0.1 PORT=3033 NODE_ENV=demo node server.js",
    "start-pre": "cross-env HOST=127.0.0.1 PORT=3033 NODE_ENV=pre node server.js",
    "admin:dev": "npm run init-cache && nodemon ./apps/admin/server.js",
    "admin:build-dist": "nuxt build --config-file ./apps/admin/nuxt.config.js",
    "admin:build": "cross-env NODE_ENV=production npm run admin:build-dist",
    "admin:deploy": "npm run pull && npm run admin:build && pm2 restart admin",
    "admin:start": "cross-env HOST=127.0.0.1 PORT=3040 NODE_ENV=production node ./apps/admin/server.js",
    "landings:dev": "npm run init-cache && nodemon ./apps/landings/server.js",
    "landings:build-dist": "npm run init-cache && nuxt build --config-file ./apps/landings/nuxt.config.js",
    "landings:build": "cross-env NODE_ENV=production npm run landings:build-dist",
    "landings:build-demo": "cross-env NODE_ENV=demo npm run landings:build-dist",
    "landings:build-pre": "cross-env NODE_ENV=pre npm run landings:build-dist",
    "landings:deploy": "npm run pull && npm run landings:build && pm2 restart landings",
    "landings:deploy-demo": "npm run pull-dev && npm run landings:build-demo && pm2 restart landings",
    "landings:deploy-pre": "npm run pull && npm run landings:build-pre && pm2 restart landings",
    "landings:start": "cross-env HOST=127.0.0.1 PORT=3034 NODE_ENV=production node ./apps/landings/server.js",
    "landings:start-demo": "cross-env HOST=127.0.0.1 PORT=3034 NODE_ENV=demo node ./apps/landings/server.js",
    "landings:start-pre": "cross-env HOST=127.0.0.1 PORT=3034 NODE_ENV=pre node ./apps/landings/server.js",
    "bro:dev": "cross-env HOST=0.0.0.0 PORT=3003 nuxt --config-file ./apps/bro/nuxt.config.js",
    "bro:build-dist": "npm run init-cache && nuxt build --config-file ./apps/bro/nuxt.config.js",
    "bro:build": "cross-env NODE_ENV=production npm run bro:build-dist",
    "bro:build-demo": "cross-env NODE_ENV=demo npm run bro:build-dist",
    "bro:deploy": "npm run pull && npm run bro:build && pm2 restart bro",
    "bro:deploy-demo": "npm run pull-dev && npm run bro:build-demo && pm2 restart bro",
    "bro:start": "cross-env HOST=127.0.0.1 PORT=3035 NODE_ENV=production nuxt start --config-file ./apps/bro/nuxt.config.js",
    "bro:start-demo": "cross-env HOST=127.0.0.1 PORT=3035 NODE_ENV=demo nuxt start --config-file ./apps/bro/nuxt.config.js",
    "docs:dev": "cross-env HOST=0.0.0.0 PORT=3000 nuxt --config-file ./apps/docs/nuxt.config.js",
    "docs:generate": "nuxt generate --config-file ./apps/docs/nuxt.config.js",
    "docs:deploy": "push-dir --dir=docs --branch=gh-pages --cleanup",
    "docs:build-js": "cross-env NODE_ENV=production webpack --config ./apps/docs/webpack.config.js",
    "docs:build-css": "cross-env NODE_ENV=production webpack --config ./apps/docs/webpack.styles.config.js",
    "docs:build": "npm run docs:build-js && npm run docs:build-css",
    "mem:dev": "cross-env HOST=0.0.0.0 PORT=3004 nuxt --config-file ./apps/mem/nuxt.config.js",
    "music:dev": "cross-env HOST=0.0.0.0 PORT=3004 nuxt --config-file ./apps/music/nuxt.config.js",
    "music:build-dist": "npm run init-cache && nuxt build --config-file ./apps/music/nuxt.config.js",
    "music:build": "cross-env NODE_ENV=production npm run music:build-dist",
    "music:build-demo": "cross-env NODE_ENV=demo npm run music:build-dist",
    "music:deploy": "npm run pull && npm run music:build && pm2 restart music",
    "music:deploy-demo": "npm run pull-dev && npm run music:build-demo && pm2 restart music",
    "music:start": "cross-env HOST=127.0.0.1 PORT=3036 NODE_ENV=production nuxt start --config-file ./apps/music/nuxt.config.js",
    "music:start-demo": "cross-env HOST=127.0.0.1 PORT=3036 NODE_ENV=demo nuxt start --config-file ./apps/music/nuxt.config.js",
    "photos:dev": "cross-env HOST=0.0.0.0 PORT=3005 nuxt --config-file ./apps/photos/nuxt.config.js",
    "photos:build-dist": "npm run init-cache && nuxt build --config-file ./apps/photos/nuxt.config.js",
    "photos:build": "cross-env NODE_ENV=production npm run photos:build-dist",
    "photos:build-demo": "cross-env NODE_ENV=demo npm run photos:build-dist",
    "photos:deploy": "npm run pull && npm run photos:build && pm2 restart photos",
    "photos:deploy-demo": "npm run pull-dev && npm run photos:build-demo && pm2 restart photos",
    "photos:start": "cross-env HOST=127.0.0.1 PORT=3037 NODE_ENV=production nuxt start --config-file ./apps/photos/nuxt.config.js",
    "photos:start-demo": "cross-env HOST=127.0.0.1 PORT=3037 NODE_ENV=demo nuxt start --config-file ./apps/photos/nuxt.config.js",
    "fonts-app:dev": "npm run init-cache && nodemon ./apps/fonts/app/server.js",
    "fonts-app:build-dist": "nuxt build --config-file ./apps/fonts/app/nuxt.config.js",
    "fonts-app:build": "cross-env NODE_ENV=production npm run fonts-app:build-dist",
    "fonts-app:build-demo": "cross-env NODE_ENV=demo npm run fonts-app:build-dist",
    "fonts-app:deploy": "npm run pull && npm run fonts-app:build && pm2 restart fonts-app",
    "fonts-app:deploy-demo": "npm run pull-dev && npm run fonts-app:build-demo && pm2 restart fonts-app",
    "fonts-app:start": "cross-env HOST=127.0.0.1 PORT=3038 NODE_ENV=production nuxt start --config-file ./apps/fonts/app/nuxt.config.js",
    "fonts-app:start-demo": "cross-env HOST=127.0.0.1 PORT=3038 NODE_ENV=demo nuxt start --config-file ./apps/fonts/app/nuxt.config.js",
    "fonts-panel:dev": "npm run init-cache && nodemon ./apps/fonts/panel/server.js",
    "fonts-panel:build-dist": "nuxt build --config-file ./apps/fonts/panel/nuxt.config.js",
    "fonts-panel:build": "cross-env NODE_ENV=production npm run fonts-panel:build-dist",
    "fonts-panel:build-demo": "cross-env NODE_ENV=demo npm run fonts-panel:build-dist",
    "fonts-panel:deploy": "npm run pull && npm run fonts-panel:build && pm2 restart fonts-panel",
    "fonts-panel:deploy-demo": "npm run pull-dev && npm run fonts-panel:build-demo && pm2 restart fonts-panel",
    "fonts-panel:start": "cross-env HOST=127.0.0.1 PORT=3039 NODE_ENV=production nuxt start --config-file ./apps/fonts/panel/nuxt.config.js",
    "fonts-panel:start-demo": "cross-env HOST=127.0.0.1 PORT=3039 NODE_ENV=demo nuxt start --config-file ./apps/fonts/panel/nuxt.config.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/KonstantinVlasov/icons8-vue.git"
  },
  "author": "KonstantinVlasov <konstantinnvlasov@gmail.com>",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/KonstantinVlasov/icons8-vue/issues"
  },
  "homepage": "https://github.com/KonstantinVlasov/icons8-vue#readme",
  "devDependencies": {
    "babel-eslint": "^8.2.1",
    "eslint": "^4.9.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-plugin-html": "^4.0.1",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-node": "^5.1.1",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-standard": "^3.0.1",
    "eslint-plugin-vue": "^4.2.0",
    "howler": "^2.0.9",
    "nodemon": "^1.12.1",
    "pug-loader": "^2.4.0",
    "sass-loader": "^6.0.7",
    "vue-eslint-parser": "^2.0.2",
    "webpack-bundle-analyzer": "^2.9.2",
    "webpack-merge": "^4.1.1"
  },
  "false": {}
}
